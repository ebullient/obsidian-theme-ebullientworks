name: Release Obsidian Theme
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version or major, minor, patch'
        default: 'patch'
        required: true
      update-manifest:
        description: 'Update manifest.json'
        default: "true"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.7'

    # Create release notes
    - name: Build and Tag
      id: build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "${{ github.event.inputs.version }}"
        echo "${{ github.event.inputs.update-manifest }}"
        git config user.name github-actions
        git config user.email github-actions@github.com

        npm install
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        VERSION=$(grep '^  "version"' package.json | cut -d'"' -f4)
        echo $VERSION

        git status
        git commit -m "ðŸ”– $VERSION"
        git push

        git tag $VERSION
        git push --tags

        npm run release-notes -- ${VERSION}
        echo "::set-output name=version::${VERSION}"

    # Create the release on github
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ steps.build.outputs.version }}
      with:
        tag_name: ${{ steps.build.outputs.version }}
        release_name: Release ${{ steps.build.outputs.version }}
        body_path: ./release-notes.md
        draft: false
        prerelease: false

    # Upload the main.js
    - name: Upload obsidian.css
      id: upload-main
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./obsidian.css
        asset_name: obsidian.css
        asset_content_type: text/css

    # Upload the tasks-snippet.css
    - name: Upload tasks-snippet.css
      id: upload-manifest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasks-snippet.css
        asset_name: tasks-snippet.css
        asset_content_type: text/css
