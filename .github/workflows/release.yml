name: Release Obsidian Theme
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching any tag format, i.e. 1.0, 20.15.10
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build.outputs.version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.7'

    # Build the plugin
    - name: Build
      id: build
      env:
        VERSION: ${{ github.ref_name }}
      run: |
        echo "Release ${VERSION}"
        npm run release-notes -- ${VERSION}
        echo "::set-output name=version::${VERSION}"

    # Create the release on github
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.ref }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: ./release-notes.md
        draft: false
        prerelease: false
    # Upload the main.js
    - name: Upload obsidian.css
      id: upload-main
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./obsidian.css
        asset_name: obsidian.css
        asset_content_type: text/css
    # Upload the tasks-snippet.css
    - name: Upload tasks-snippet.css
      id: upload-manifest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tasks-snippet.css
        asset_name: tasks-snippet.css
        asset_content_type: text/css
