@charset "UTF-8";
/*
Ebullientworks tasks 0.3.4 by @ebullient
*/
:root {
  --checkbox-checked: rgb(139, 167, 145);
  --checkbox-deferred: rgb(111, 166, 211);
  --checkbox-important: rgb(187, 79, 108);
  --checkbox-review: rgb(92, 122, 99);
  --checkbox-in-progress: rgb(89, 174, 170);
  --checkbox-question: rgb(234, 175, 0);
}

.theme-dark {
  --checkbox-cancelled: rgb(115, 115, 115);
  --checkbox-hover: rgb(137, 137, 137);
}

.theme-dark .print,
.theme-light {
  --checkbox-cancelled: rgb(159, 159, 159);
  --checkbox-hover: rgb(137, 137, 137);
}

/** Clear background from minimal theme */
.checklist-plugin-main .group .compact > .toggle .checked,
.is-flashing input[type=checkbox]:checked,
input[type=checkbox]:checked {
  background-color: unset !important;
}

/* '✓' for completed task ('- [x]') */
/* '-' for cancelled task ('- [-]') */
/* '>' for deferred task ('- [>]') */
/* '?' for question/more info task ('- [?]') */
/* 'R' for PR info task ('- [R]') */
/* '!' for important task ('- [!]') */
/* "/" Half done */
/* text style tasks that should still have readable text */
/* text style for important task ('- [!]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox,
.markdown-preview-view input.task-list-item-checkbox {
  -webkit-appearance: none;
  box-sizing: border-box;
  transition: background-color 200ms ease-out 0s;
  cursor: pointer;
  filter: none;
  border: 1px solid var(--text-normal);
  border-radius: 2px;
  position: relative;
}

.markdown-preview-view input.task-list-item-checkbox {
  margin-top: 2px;
  margin-bottom: 1px;
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox {
  margin-top: 3px;
  margin-bottom: 3px;
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox:checked::before,
.markdown-preview-view input.task-list-item-checkbox:checked::before {
  font-family: var(--font-monospace);
  position: absolute;
  text-align: center;
  font-weight: 500;
  line-height: 14px;
  font-size: 14px;
  left: 1px;
  right: 1px;
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox::before,
.markdown-preview-view ul > li > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li > p > input.task-list-item-checkbox:checked::before {
  content: "✓";
  color: var(--text-normal);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox,
.markdown-preview-view ul > li > input.task-list-item-checkbox,
.markdown-preview-view ul > li > p > input.task-list-item-checkbox {
  border-color: var(--text-normal);
  color: var(--text-normal);
}

.markdown-preview-view ul > li.task-list-item {
  font-weight: normal;
  color: var(--text-normal);
}

.markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:not([data-task=" "]),
.markdown-source-view.mod-cm6 input.task-list-item-checkbox + span,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox + span + span,
.markdown-preview-view ul > li.task-list-item.is-checked {
  color: var(--text-normal);
  text-decoration: none;
}

/* 'x' for completed task ('- [x]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=x]::before,
.markdown-preview-view ul > li[data-task=X] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task=X] > p > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task=x] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task=x] > p > input.task-list-item-checkbox:checked::before {
  content: "✓";
  color: var(--checkbox-checked);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=X],
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=x],
.markdown-preview-view ul > li[data-task=X] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task=X] > p > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task=x] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task=x] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-checked);
  color: var(--checkbox-checked);
}

/* '-' for completed task ('- [-]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="-"]::before,
.markdown-preview-view ul > li[data-task="-"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task="-"] > p > input.task-list-item-checkbox:checked::before {
  content: "-";
  color: var(--checkbox-cancelled);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="-"],
.markdown-preview-view ul > li[data-task="-"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task="-"] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-cancelled);
  color: var(--checkbox-cancelled);
}

.markdown-source-view.mod-cm6 .HyperMD-task-line[data-task="-"],
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="-"] + span,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="-"] + span + span,
.markdown-preview-view ul > li[data-task="-"].task-list-item.is-checked {
  text-decoration: line-through;
  color: var(--checkbox-cancelled);
}

/* '>' for completed task ('- [>]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=">"]::before,
.markdown-preview-view ul > li[data-task=">"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task=">"] > p > input.task-list-item-checkbox:checked::before {
  content: ">";
  color: var(--checkbox-deferred);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=">"],
.markdown-preview-view ul > li[data-task=">"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task=">"] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-deferred);
  color: var(--checkbox-deferred);
}

/* '?' for completed task ('- [?]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="?"]::before,
.markdown-preview-view ul > li[data-task="?"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task="?"] > p > input.task-list-item-checkbox:checked::before {
  content: "?";
  color: var(--checkbox-question);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="?"],
.markdown-preview-view ul > li[data-task="?"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task="?"] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-question);
  color: var(--checkbox-question);
}

/* 'R' for completed task ('- [R]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=R]::before,
.markdown-preview-view ul > li[data-task=R] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task=R] > p > input.task-list-item-checkbox:checked::before {
  content: "👀";
  font-size: 0.7em;
  color: var(--checkbox-review);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task=R],
.markdown-preview-view ul > li[data-task=R] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task=R] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-review);
  color: var(--checkbox-review);
}

/* '!' for completed task ('- [!]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="!"]::before,
.markdown-preview-view ul > li[data-task="!"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task="!"] > p > input.task-list-item-checkbox:checked::before {
  content: "‼️";
  color: var(--checkbox-important);
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="!"],
.markdown-preview-view ul > li[data-task="!"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task="!"] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-important);
  color: var(--checkbox-important);
}

.markdown-source-view.mod-cm6 .HyperMD-task-line[data-task="!"],
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="!"] + span,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="!"] + span + span,
.markdown-preview-view ul > li[data-task="!"].task-list-item.is-checked {
  color: var(--checkbox-important);
  font-weight: 900;
}

/* '/' for completed task ('- [/]') */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="/"]::before,
.markdown-preview-view ul > li[data-task="/"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task="/"] > p > input.task-list-item-checkbox:checked::before {
  content: " ";
  line-height: 18px;
}

.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="/"],
.markdown-preview-view ul > li[data-task="/"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task="/"] > p > input.task-list-item-checkbox {
  border-color: var(--checkbox-in-progress);
  background: linear-gradient(135deg, transparent 50%, var(--checkbox-in-progress) 50%);
}

/* Consistent hover colors */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox:hover,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="!"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="!"] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="-"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="-"] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="/"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="/"] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=">"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=">"] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="?"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="?"] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=R] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=R] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=X] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=X] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=x] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task=x] > p > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view input.task-list-item-checkbox:hover {
  color: var(--text-on-accent);
  background-color: var(--checkbox-hover);
  border-color: var(--text-on-accent);
}